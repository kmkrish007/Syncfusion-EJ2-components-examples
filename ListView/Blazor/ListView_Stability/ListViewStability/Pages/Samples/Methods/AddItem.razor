@page "/methods/additem"

@using Syncfusion.Blazor.Lists

<th>SortOrder:</th>
<td>
    <select id="sortorder" @onchange="@ChangeSortOrder">
        @foreach (var val in orderSort)
        {
            <option value="@val.ToString()">@val</option>
        }
    </select>
</td>
<div id="container">
    <button id="add_button" @onclick="@AddListItem">Add Item</button>
    <div class="flex vertical-center">
        <div class="padding">
            <SfListView ID="Listview" @ref="listInstance" DataSource="@DataSource" Width="300px" SortOrder="sortOrder">
                <ListViewFieldSettings TValue="ListDataModel" Id="Id" Text="Text"></ListViewFieldSettings>
                <ListViewEvents TValue="ListDataModel">
                </ListViewEvents>
            </SfListView>
        </div>
    </div>
</div>

@code
{ SfListView<ListDataModel> listInstance;
    List<string> Events = new List<string>();
    SortOrder sortOrder = SortOrder.None;

    List<SortOrder> orderSort = new List<SortOrder>() { SortOrder.None, SortOrder.Ascending, SortOrder.Descending };

    List<ListDataModel> DataSource = new List<ListDataModel>() {
    new ListDataModel { Id = "1", Text = "Music" },
    new ListDataModel { Id = "2", Text = "Videos" },
    new ListDataModel { Id = "3", Text = "Documents" },
    new ListDataModel { Id = "4", Text = "Pictures" },
    new ListDataModel { Id = "5", Text = "Downloads" },
    new ListDataModel { Id = "6", Text = "Music" },
    new ListDataModel { Id = "7", Text = "Audios" },
};

    class ListDataModel
    {
        public string Id
        {
            get;
            set;
        }
        public string Text
        {
            get;
            set;
        }
    }

    private void AddListItem(MouseEventArgs e)
    {
        Random rng = new Random();
        List<ListDataModel> dt = new List<ListDataModel>() { new ListDataModel { Id = rng.Next().ToString(), Text = "new Text" } };
        this.listInstance.AddItem(dt);
    }

    private void ChangeSortOrder(ChangeEventArgs e)
    {
        sortOrder = (SortOrder)Enum.Parse(typeof(SortOrder), e.Value.ToString());
        //sortOrder = SortOrder.Descending;
        StateHasChanged();
    }

    }
<style>
    #container .e-listview {
        box-shadow: 0 1px 4px #ddd;
        border-bottom: 1px solid #ddd;
    }

    .tracker {
        max-height: 250px;
        overflow: auto;
    }

    .sample {
        justify-content: center;
        min-height: 280px;
        width: 750px;
    }

    .vertical-center {
        align-items: center;
    }

    .padding {
        padding: 4px;
    }

    .flex {
        display: flex;
    }

    .flex__center {
        justify-content: center;
    }

    .margin {
        margin: 10px;
    }

    .sf-license-warning {
        display: none;
    }
</style>