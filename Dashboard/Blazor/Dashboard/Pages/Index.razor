@page "/"

@code {
    public DateTime LastModified => new DateTime(2020, 03, 04, 14, 20, 0);
    public bool IsFixed => false;
}

@using Syncfusion.EJ2.Blazor.Layouts
@using Syncfusion.EJ2.Blazor.Buttons

<h3>Description</h3>

Dashboard layout behaves incorrectly when adding panels after increasing number of columns.

<h3>Demo</h3>

<EjsButton OnClick="IncreaseColumns">Increase number columns by 1</EjsButton>
<EjsButton OnClick="AddPanel">Add panel in last column</EjsButton>

<div style="width: 80%; height: 80%">
    <EjsDashboardLayout @ref="dashboard" Columns="@Columns" CellAspectRatio="1">
        <DashboardLayoutPanels>
            @foreach (var panel in Panels)
            {
                <DashboardLayoutPanel Col="panel.X" Row="panel.Y" SizeX="panel.Width" SizeY="panel.Height">
                    <HeaderTemplate>
                    </HeaderTemplate>
                    <ContentTemplate>
                        <p>@panel.X</p>
                        <p>@panel.Y</p>
                        <p>@panel.Width</p>
                        <p>@panel.Height</p>
                    </ContentTemplate>
                </DashboardLayoutPanel>
            }
        </DashboardLayoutPanels>
    </EjsDashboardLayout>
</div>
@code  {
    EjsDashboardLayout dashboard;
    public List<ResizeArgs> Events = new List<ResizeArgs>();
    public List<DragStopArgs> DragEvents = new List<DragStopArgs>();
    public List<List<SimplePanelDefinition>> Layouts = new List<List<SimplePanelDefinition>>();
    public class SimplePanelDefinition
    {
        public int X { get; set; }
        public int Y { get; set; }
        public int Width { get; set; }
        public int Height { get; set; }
        public SimplePanelDefinition()
        {
        }
        public SimplePanelDefinition(DashboardLayoutPanel panel)
        {
            X = panel.Col;
            Y = panel.Row;
            Width = panel.SizeX;
            Height = panel.SizeY;
        }
    }
    public int Columns { get; set; } = 2;
    public List<SimplePanelDefinition> Panels { get; set; } = new List<SimplePanelDefinition>
{
        new SimplePanelDefinition { X = 0, Y = 0, Width = 1, Height = 1 },
        new SimplePanelDefinition { X = 0, Y = 1, Width = 1, Height = 1 },
        new SimplePanelDefinition { X = 1, Y = 0, Width = 1, Height = 1 },
        new SimplePanelDefinition { X = 1, Y = 1, Width = 1, Height = 1 }
    };
    public void IncreaseColumns()
    {
        Columns += 1;
    }
    public void AddPanel()
    {
        int colValue = @Columns - 1;
        this.dashboard.AddPanel(new PanelModel
        {
            Col = Columns - 1,
            Row = 0,
            SizeX = 1,
            SizeY = 1,
            Content =@<div><p>@colValue</p><p>0</p><p>1</p><p>1</p></div>
        });
    }
}
